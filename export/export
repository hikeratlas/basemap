#!/bin/bash
set -euo pipefail
set -x

config_fname="export_$$.json"
ignored_output_fname="ignored_$$.pmtiles"

function finish {
  rm -f "${config_fname}" "${ignored_output_fname}"
}
trap finish EXIT

layer_config_zindex() {
  cat <<EOF
  "city_parks": {
      "minzoom": 15,
      "maxzoom": 15,
      "source": "../city-parks.geojsonl",
      "index": true,
      "index_column": "name"
  },
  "countries": {
      "minzoom": 15,
      "maxzoom": 15,
      "source": "../countries.geojsonl",
      "index": true,
      "index_column": "name"
  },
  "parks": {
      "minzoom": 15,
      "maxzoom": 15,
      "source": "../parks.geojsonl",
      "index": true,
      "index_column": "name"
  },
  "states": {
      "minzoom": 15,
      "maxzoom": 15,
      "source": "../states.geojsonl",
      "index": true,
      "index_column": "name"
  }
EOF
}

stock_config() {
  layer=${1:?must provide layer to export}

  layer_config=""

  if [ "$layer" == "zindex" ]; then
    layer_config="$(layer_config_zindex)"

  fi

  cat <<EOF
{
    "layers": {
${layer_config}
    },
    "settings": {
        "minzoom": 0,
        "maxzoom": 0,
        "basezoom": 0,
        "compress": "gzip",
        "include_ids": false,
        "name": "GeoJSON export",
        "version": "1.0",
        "description": "Dummy tile config"
    }
}
EOF
}

main() {
  pbf=${1:?must provide path to pbf}
  layer=${2:?must provide layer to export}
  pbf=$(readlink -f "$pbf")
  geojsonl_fname="$(readlink -f ${layer}.geojsonl)"

  if [ ! -e "$pbf" ]; then
    echo "error: ${pbf} not found" > /dev/stderr
    exit 2
  fi

  me="$(readlink -f "$0")"
  here="$(dirname "$me")"
  pushd "$here"
  lua_fname="${here}/${layer}.lua"

  if [ ! -e "$lua_fname" ]; then
    echo "error: ${lua_fname} not found" > /dev/stderr
    exit 2
  fi

  stock_config "${layer}" >> "${config_fname}"

  rm -f "${geojsonl_fname}"
  DUMP_FILENAME="${geojsonl_fname}" ${TILEMAKER:-tilemaker} --input "${pbf}" --output "${ignored_output_fname}" --config "${config_fname}" --process "${lua_fname}"

}

main "$@"
